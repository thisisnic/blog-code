<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cpps on A minimal Hugo website</title>
    <link>/cpp/</link>
    <description>Recent content in Cpps on A minimal Hugo website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 22 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="/cpp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>What is a struct?</title>
      <link>/cpp/2021/04/22/what-is-a-struct/</link>
      <pubDate>Thu, 22 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/cpp/2021/04/22/what-is-a-struct/</guid>
      <description>A struct, short for structure, is similar to an R list in that it can be used to contain multiple objects of different types.</description>
    </item>
    
    <item>
      <title>Modern C&#43;&#43;</title>
      <link>/cpp/2021/04/19/modern-c/</link>
      <pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/cpp/2021/04/19/modern-c/</guid>
      <description>  When people use the phrase “modern C++”, they’re usually referring to C++ 11 onwards.
Libraries The main libraries in C++ are:
The C++ standard library Standard Template Library (contains things like algorithms, iterators, etc) Boost (some really great stuff in here; some of it is moving into the standard library) QT framework (for cross-platform UI) Intel libraries (lots of others!)   </description>
    </item>
    
    <item>
      <title>Pointers and References</title>
      <link>/cpp/2021/04/19/pointers-and-references/</link>
      <pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/cpp/2021/04/19/pointers-and-references/</guid>
      <description>Pointers What is a pointer? A pointer is a variable that contains a memory address for a value.
If you pass a pointer into a function, you get a copy of that pointer (so it points to the same address).
If you then change the value of the copy inside of the function, it affects whatever is at the address that the pointer is pointing at.
You could point the pointer to different things, and when you dereference it, it will return the value of whatever is at the address is is pointed at.</description>
    </item>
    
    <item>
      <title>What is const?</title>
      <link>/cpp/2021/04/19/what-is-const/</link>
      <pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/cpp/2021/04/19/what-is-const/</guid>
      <description>const is a keyword we use to define constants; variables which are not changed after their creation.</description>
    </item>
    
    <item>
      <title>What is SEXP?</title>
      <link>/cpp/2021/04/19/what-is-sexp/</link>
      <pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/cpp/2021/04/19/what-is-sexp/</guid>
      <description>SEXP is short for S Expression. It is the C struct used to represent every type of object in R. C functions that talk to R must used the SEXP type for both inputs and outputs.</description>
    </item>
    
  </channel>
</rss>
